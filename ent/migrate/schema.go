// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CoursesColumns holds the columns for the "courses" table.
	CoursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "year", Type: field.TypeInt},
		{Name: "period", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "last_modified_at", Type: field.TypeTime},
		{Name: "professor_courses", Type: field.TypeString, Nullable: true},
	}
	// CoursesTable holds the schema information for the "courses" table.
	CoursesTable = &schema.Table{
		Name:       "courses",
		Columns:    CoursesColumns,
		PrimaryKey: []*schema.Column{CoursesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "courses_professors_courses",
				Columns:    []*schema.Column{CoursesColumns[5]},
				RefColumns: []*schema.Column{ProfessorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProfessorsColumns holds the columns for the "professors" table.
	ProfessorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "birth_date", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "last_modified_at", Type: field.TypeTime},
	}
	// ProfessorsTable holds the schema information for the "professors" table.
	ProfessorsTable = &schema.Table{
		Name:       "professors",
		Columns:    ProfessorsColumns,
		PrimaryKey: []*schema.Column{ProfessorsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "professor_id",
				Unique:  true,
				Columns: []*schema.Column{ProfessorsColumns[0]},
			},
		},
	}
	// SubjectsColumns holds the columns for the "subjects" table.
	SubjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString, Unique: true, SchemaType: map[string]string{"postgres": "char(6)"}},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "active", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "last_modified_at", Type: field.TypeTime},
	}
	// SubjectsTable holds the schema information for the "subjects" table.
	SubjectsTable = &schema.Table{
		Name:       "subjects",
		Columns:    SubjectsColumns,
		PrimaryKey: []*schema.Column{SubjectsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "subject_code",
				Unique:  true,
				Columns: []*schema.Column{SubjectsColumns[1]},
			},
		},
	}
	// SubjectCoursesColumns holds the columns for the "subject_courses" table.
	SubjectCoursesColumns = []*schema.Column{
		{Name: "subject_id", Type: field.TypeInt},
		{Name: "course_id", Type: field.TypeInt},
	}
	// SubjectCoursesTable holds the schema information for the "subject_courses" table.
	SubjectCoursesTable = &schema.Table{
		Name:       "subject_courses",
		Columns:    SubjectCoursesColumns,
		PrimaryKey: []*schema.Column{SubjectCoursesColumns[0], SubjectCoursesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "subject_courses_subject_id",
				Columns:    []*schema.Column{SubjectCoursesColumns[0]},
				RefColumns: []*schema.Column{SubjectsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "subject_courses_course_id",
				Columns:    []*schema.Column{SubjectCoursesColumns[1]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CoursesTable,
		ProfessorsTable,
		SubjectsTable,
		SubjectCoursesTable,
	}
)

func init() {
	CoursesTable.ForeignKeys[0].RefTable = ProfessorsTable
	SubjectCoursesTable.ForeignKeys[0].RefTable = SubjectsTable
	SubjectCoursesTable.ForeignKeys[1].RefTable = CoursesTable
}
